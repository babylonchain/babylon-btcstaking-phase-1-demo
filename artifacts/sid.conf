[Application Options]
; Logging level for all subsystems {trace, debug, info, warn, error, fatal}
LogLevel = debug

; Bitcoin network to run on {mainnet, regtest, testnet, signet}
BitcoinNetwork = regtest

[btcconfig]
; The daemon's rpc listening address.
RPCHost = bitcoindsim:18443

; Username for RPC connections.
RPCUser = rpcuser

; Password for RPC connections.
RPCPass = rpcpass

; The maximum number of peers staker will choose from the backend node to retrieve pruned blocks from. This only applies to pruned nodes.
PrunedNodeMaxPeers = 0

; The interval that will be used to poll bitcoind for new blocks. Only used if rpcpolling is true.
BlockPollingInterval = 5s

; The interval that will be used to poll bitcoind for new tx. Only used if rpcpolling is true.
TxPollingInterval = 10s

; size of the Bitcoin blocks cache
BlockCacheSize = 20971520

MaxRetryTimes = 5

RetryInterval = 0.5s

[dbconfig]
; The directory path in which the database file should be stored.
DBPath = /home/staking-indexer/.sid/data

; The name of the database file.
DBFileName = bbolt.db

; Prevents the database from syncing its freelist to disk, resulting in improved performance at the expense of increased startup time.
NoFreelistSync = true

; Specifies if a Bolt based database backend should be automatically compacted on startup (if the minimum age of the database file is reached). This will require additional disk space for the compacted copy of the database but will result in an overall lower database size after the compaction.
AutoCompact = false

; Specifies the minimum time that must have passed since a bolt database file was last compacted for the compaction to be considered again.
AutoCompactMinAge = 168h0m0s

; Specifies the timeout value to use when opening the wallet database.
DBTimeout = 1m0s

[queueconfig]
; the user name of the queue
User = user

; the password of the queue
Password = password

; the url of the queue
Url = rabbitmq:5672

; the process timeout of the queue
ProcessingTimeout = 5s

; the maximum number of times a message will be retried
MsgMaxRetryAttempts = 10

; the time a message will be hold in delay queue before being sent to main queue again
ReQueueDelayTime = 300s

; the rabbitmq queue type, either classic or quorum
QueueType = quorum

[metricsconfig]
; IP of the Prometheus server
Host = 0.0.0.0

; Port of the Prometheus server
Port = 2112